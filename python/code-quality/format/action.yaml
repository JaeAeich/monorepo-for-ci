---
name: Format Code
description: Checks and ensures the code is formatted according to the defined style guidelines.

inputs:
  os:
    description: Os to use
    default: "ubuntu-latest"
  python_version:
    description: Python version to use
    default: "3.12"
    required: false
  poetry_install_options:
    description: Options for installing dependencies via poetry
    required: false
    default: "--only=code_quality --no-root"
  poetry_export_options:
    description: Options for exporting dependencies to check for hash 
      changes for cache invalidation
    required: false
    default: "--only=code_quality"
  github_token:
    description: Githun token

runs:
  using: composite
  steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up environment
      uses: jaeaeich/monorepo-for-ci/python/setup/poetry@main
      with:
        os: ${{ inputs.os }}
        python_version: ${{ inputs.python_version }}
        poetry_install_options: ${{ inputs.poetry_install_options }}
        poetry_export_options: ${{ inputs.poetry_export_options }}

    - name: Check code style
      shell: bash
      run: poetry run ruff format --check

    - name: Comment on Failure
      if: failure()
      uses: peter-evans/create-or-update-comment@v3
      with:
        token: ${{ inputs.GITHUB_TOKEN }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          :x: The code style check **failed** on **${{ inputs.os }}** with Python **${{ inputs.python_version }}**.
          Please review the following details:
          - Poetry Install Options: `${{ inputs.poetry_install_options }}`
          - Poetry Export Options: `${{ inputs.poetry_export_options }}`

          Check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) 
          for more details.
...
